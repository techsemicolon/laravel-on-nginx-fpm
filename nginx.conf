# Mostly located at : /etc/nginx/nginx.conf

# Defines the number of worker processes where a worker process here refers to a single-threaded nginx process. 
# A thumb rule to start with is setting this value equal to number of CPU cores the running server has
# You can get this numeric value using `grep -c ^processor /proc/cpuinfo` for linux servers
worker_processes 1;

# User who will be running nginx worker processes processes 
user www-data;

events {

        # This is number of simultaneuos connections a worker process can have. 
        # Setting this number a very high value will not be helpful as this can not exceed the max open files limit on the server
        # You can check the max open file limit on linux using `ulimit -n`
        # However that limit can be modified(overridden) by worker_rlimit_nofile directive below
        worker_connections 1500;
        worker_rlimit_nofile 1500;
}

http {
    
        # Allows to transfer data from a file descriptor to another directly in kernel space.  
        # Saves resources by following `zero copy` (which referrs to writing directly the kernel buffer from the block device memory through direct memory access DMA).
        sendfile on;

        # Limits the the amount of data that can be transferred in a single sendfile() call. After setting this nginx will not send the entire file together, but will chunk it by 512‑KB pieces.
        sendfile_max_chunk 512k;

        # Optimizes the amount of data sent at once.
        tcp_nopush on;

        # Forces a socket to send the data in its buffer, whatever the packet size.
        # Avoids network congestion and optimizes the delivery sending the data as soon as it's available.
        tcp_nodelay on;

        # Sets a timeout during which a keep-alive client connection will stay open on the server side.
        keepalive_timeout 65s;

        # Sets the maximum number of requests that can be served through one keep-alive connection. After the maximum number of requests are made, the connection is closed.
        keepalive_requests 1000;

        # Avoids emitting nginx version on error pages and in the “Server” response header field
        server_tokens off;

        # Clears the specified output headers. This avoids nginx information apearing on the respose headers visible in the browser.
        more_clear_headers 'Server';
        more_clear_headers 'X-Powered-By';

        # Sets buffer size for reading client request body.
        client_body_buffer_size 10K;

        # Sets buffer size for reading client request header.
        client_header_buffer_size 1k;

        # Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field. # If it exceeds gives 413 error.
        client_max_body_size 50M;

        # Below are timeout directives. Make sure these directives do not terminate your usual average load times.
        # However setting it to a too large value is not an efficient way as it keeps the process resources in waiting state.
        # Defines a timeout for reading client request body.
        client_body_timeout 60s;

        Defines a timeout for reading client request header.
        client_header_timeout 60s;

        # Sets a timeout for transmitting a response to the client. 
        send_timeout 60s;

        # Setting defaul and allowed MIME types
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        
        # Log settings
        # `buffer=64k flush=5m` -> Logs only when total buffered log of of 64kb of 5 mins have passed since last log write
        access_log /var/log/nginx/access.log combined  buffer=64k flush=5m;

        # Error Log
        error_log /var/log/nginx/error.log;

        # Gzip Settings
        gzip             on;
        gzip_min_length  1000;
        gzip_proxied     expired no-cache no-store private auth;
        gzip_types       text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_vary on;

        # The higher value of `gzip_comp_level` is set(max 9), more memory is used to compress.
        gzip_comp_level  3;

        # Including virtual host configs
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}