# Mostly located at : /etc/php/7.0/fpm/pool.d/www.conf

; Setting the pool name
[www]

; Unix user/group of processes
user 	= www-data
group 	= www-data

; The address on which to accept FastCGI requests.
listen = /run/php/php7.0-fpm.sock

; Set permissions for unix socket
;listen.mode = 0660
listen.owner = shm-phm
listen.group = shm-phm


; Choose how the process manager will control the number of child processes.
; dynamic - the number of child processes are set dynamically based on the
;             following directives. With this process management, there will be
;             always at least 1 children.
; - pm.max_children
; - pm.start_servers
; - pm.min_spare_servers
; - pm.max_spare_servers

pm = dynamic

; The maximum number of child processes.
; This value sets the limit on the number of simultaneous requests that will be
; served.
; To calculate this, calculate => (available memory - 500MB )/ Average size of an fpm process
pm.max_children = 36

; The number of child processes created on startup.
; Note: Used only when pm is set to 'dynamic'
; Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2
pm.start_servers = 10

; The desired minimum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
; Note: Mandatory when pm is set to 'dynamic'
pm.min_spare_servers = 10

; The desired maximum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
; Note: Mandatory when pm is set to 'dynamic'
pm.max_spare_servers = 35

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
; Default Value: 0
pm.max_requests = 1000

; The access log file
; Default: not set
;access.log = log/$pool.access.log

; Note : Set this on DEV MODE to have detailed insights of an slower process
; The log file for slow requests
; Default Value: not set
; Note: slowlog is mandatory if request_slowlog_timeout is set
;slowlog = log/$pool.log.slow

; Note : Set this on DEV MODE to have detailed insights of an slower process
; The timeout for serving a single request after which a PHP backtrace will be
; dumped to the 'slowlog' file. A value of '0s' means 'off'.
; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)
; Default Value: 0
;request_slowlog_timeout = 0

; The timeout for serving a single request after which the worker process will
; be killed. This option should be used when the 'max_execution_time' ini option
; does not stop script execution for some reason. A value of '0' means 'off'.
; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)
; Default Value: 0
request_terminate_timeout = 60s

; Set open file descriptor rlimit.
; Default Value: system defined value
; This has to be similar to the `worker_rlimit_nofile` in nginx.conf
rlimit_files = 1500

; Note : Set this on DEV MODE to have detailed insights of an FPM process
; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Note: on highloaded environement, this can cause some delay in the page
; process time (several ms).
; Default Value: no
;catch_workers_output = yes
